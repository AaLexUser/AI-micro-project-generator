FROM python:3.12-slim AS base
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1
WORKDIR /app

FROM base AS builder
RUN apt-get update && apt-get install -y --no-install-recommends build-essential \
    && rm -rf /var/lib/apt/lists/*

# Leverage cache: copy only dependency metadata first
COPY pyproject.toml /app/

RUN pip install --upgrade pip \
    && pip wheel --wheel-dir /wheels /app

# Now copy the full source and build wheels for it as well
COPY . /app
RUN pip wheel --wheel-dir /wheels /app

FROM base AS runtime
# Create non-root user
RUN addgroup --system app && adduser --system --ingroup app app

# Install runtime deps from built wheels only
COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir --no-index --find-links=/wheels ai-micro-project-generator \
    && rm -rf /wheels

# Copy runtime assets that are not included in the installed package (configs)
COPY aipg/configs /app/aipg/configs
RUN chown -R app:app /app

# Seed default config if missing
RUN if [ -f "/app/aipg/configs/default.yaml.example" ] && [ ! -f "/app/aipg/configs/default.yaml" ]; then \
      cp /app/aipg/configs/default.yaml.example /app/aipg/configs/default.yaml; \
    fi

USER app
EXPOSE 8000
CMD ["python", "-m", "aipg.api"]
